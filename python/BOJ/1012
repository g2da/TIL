import sys
from collections import deque

dy, dx = [-1, 1, 0, 0], [0, 0, -1, 1]


def bfs(arr, y, x):
    q = deque()
    q.append((y, x))
    arr[y][x] = 0
    while q:
        y, x = q.popleft()
        for i in range(4):
            ny, nx = dy[i] + y, dx[i] + x
            if ny < 0 or ny >= N or nx < 0 or nx >= M: # x좌표, y좌표 범위 구분 잘하기
                continue
            if arr[ny][nx] == 1:
                arr[ny][nx] = 0
                q.append((ny, nx))


T = int(sys.stdin.readline().rstrip())
for _ in range(T):
    M, N, K = map(int, sys.stdin.readline().split())
    arr = [[0] * M for _ in range(N)]
    ans = 0

    for _ in range(K):
        x, y = map(int, sys.stdin.readline().split())
        arr[y][x] = 1
    for i in range(N):
        for j in range(M):
            if arr[i][j] == 1:
                arr[i][j] == 0
                bfs(arr, i, j)
                ans += 1
    print(ans)
