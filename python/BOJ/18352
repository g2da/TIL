import sys
from collections import deque
input = sys.stdin.readline
N, M, K, X = map(int, input().split())

graph = [[] for _ in range(N + 1)]
for _ in range(M):
    a, b = map(int, input().split())
    graph[a].append(b)
dis = [-1] * (N + 1)


def bfs(graph, dis, target, start):
    q = deque([start])
    dis[start] = 0 
    while q:
        cur = q.popleft()
        for next in graph[cur]: 
            if dis[next] == -1: 
                dis[next] = dis[cur] + 1 
                q.append(next)
    if target in dis:
        for i in range(1, N + 1):
            if target == dis[i]:
                print(i)
    else:
        print(-1)
    return


bfs(graph, dis, K, X)
