import sys
from collections import deque

N = int(sys.stdin.readline())
arr = [list(map(str, sys.stdin.readline().rstrip())) for _ in range(N)]
visited = [[0] * N for _ in range(N)]
dy, dx = [-1, 1, 0, 0], [0, 0, -1, 1]
colors = ['R', 'G', 'B']
b_colors = ['R', 'B']
cnt, b_cnt = 0, 0


def bfs(arr, y, x, color):
    q = deque()
    q.append((y, x))
    while q:
        y, x = q.popleft()
        for i in range(4):
            ny, nx = dy[i] + y, dx[i] + x
            if ny < 0 or nx < 0 or ny >= N or nx >= N:
                continue
            if not visited[ny][nx] and arr[ny][nx] == color:
                visited[ny][nx] = 1
                q.append((ny, nx))


for color in colors:
    for i in range(N):
        for j in range(N):
            if not visited[i][j] and arr[i][j] == color:
                visited[i][j] = 1
                bfs(arr, i, j, color)
                cnt += 1

for i in range(N):
    for j in range(N):
        if arr[i][j] == 'G':
            arr[i][j] = 'R'

visited = [[0] * N for _ in range(N)]

for color in b_colors:
    for i in range(N):
        for j in range(N):
            if not visited[i][j] and arr[i][j] == color:
                visited[i][j] = 1
                bfs(arr, i, j, color)
                b_cnt += 1

print(cnt, b_cnt)
