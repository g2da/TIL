import sys
from collections import deque

N = int(sys.stdin.readline().rstrip())
arr = [list(map(int, sys.stdin.readline().strip())) for i in range(N)]
dx, dy = [-1, 1, 0, 0], [0, 0, -1, 1]
ans = []


def bfs(arr, x, y):
    q = deque()
    q.append((x, y))
    cnt = 1
    while q:
        x, y = q.popleft()
        for i in range(4):
            nx, ny = dx[i] + x, dy[i] + y
            if nx < 0 or nx >= N or ny < 0 or ny >= N: # 범위가 넘어가면 keep
                continue
            if arr[nx][ny] == 1:
                arr[nx][ny] = 0
                q.append((nx, ny))
                cnt += 1
    return cnt


for i in range(N):
    for j in range(N):
        if arr[i][j] == 1:
            arr[i][j] = 0  # 중요하다고 생각하는 부분 : 탐색중인 위치를 0으로 바꿔서 다시 방문하지 않게 함 #bfs() 전에 초기화
            ans.append(bfs(arr, i, j))

print(len(ans))
for i in sorted(ans):
    if len(ans) == 0:
        print(0)
    else:
        print(i)
